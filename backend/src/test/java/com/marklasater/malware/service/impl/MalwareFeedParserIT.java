package com.marklasater.malware.service.impl;

import com.marklasater.malware.model.MalwareReport;
import mockit.Tested;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.springframework.test.util.ReflectionTestUtils;

import java.util.List;

public class MalwareFeedParserIT {

    @Tested
    MalwareFeedParserImpl malwareFeedParser;

    @Before
    public void before(){
        malwareFeedParser = new MalwareFeedParserImpl();
        ReflectionTestUtils.setField(malwareFeedParser, "idLocation", 0);
        ReflectionTestUtils.setField(malwareFeedParser, "dateAddedLocation", 1);
        ReflectionTestUtils.setField(malwareFeedParser, "urlLocation", 2);
        ReflectionTestUtils.setField(malwareFeedParser, "urlStatusLocation", 3);
        ReflectionTestUtils.setField(malwareFeedParser, "threatLocation", 4);
        ReflectionTestUtils.setField(malwareFeedParser, "tagsLocation", 5);
        ReflectionTestUtils.setField(malwareFeedParser, "urlHausLinkLocation", 6);
    }

    @Test
    public void testParseCsvFeed_3Items(){
        String csv = "################################################################\n" +
                "# abuse.ch URLhaus Database Dump (CSV)                         #\n" +
                "# Last updated: 2018-08-24 16:45:21 (UTC)                      #\n" +
                "#                                                              #\n" +
                "# Terms Of Use: https://urlhaus.abuse.ch/api/                  #\n" +
                "# For questions please contact urlhaus [at] abuse.ch           #\n" +
                "################################################################\n" +
                "#\n" +
                "# id,dateadded,url,url_status,threat,tags,urlhaus_link\n" +
                "\"47326\",\"2018-08-24 16:45:21\",\"http://www.optisaving.com/wp-content/themes/pixel_wp/tas.exe\",\"online\",\"malware_download\",\"exe,Trickbot\",\"https://urlhaus.abuse.ch/url/47326/\"\n" +
                "\"47325\",\"2018-08-24 16:45:18\",\"http://lnsect-net.com/file/tt.exe\",\"online\",\"malware_download\",\"exe,Trickbot\",\"https://urlhaus.abuse.ch/url/47325/\"\n" +
                "\"47324\",\"2018-08-24 16:45:14\",\"https://cld.pt/dl/download/0e24f250-00c7-4480-b589-ec16c9175c45/uxspjto2mryz.doc\",\"online\",\"malware_download\",\"doc,Trickbot\",\"https://urlhaus.abuse.ch/url/47324/\"\n";


        List<MalwareReport> actualResponse = malwareFeedParser.parseCsvFeed(csv);
        Assert.assertNotNull(actualResponse);
        Assert.assertEquals(3, actualResponse.size());
    }

    @Test
    public void testParseCsvFeed_noItems(){
        String csv = "";

        List<MalwareReport> actualResponse = malwareFeedParser.parseCsvFeed(csv);
        Assert.assertNotNull(actualResponse);
        Assert.assertEquals(0, actualResponse.size());
    }

    @Test
    public void testParseCsvLine(){
        String csvLine = "\"47325\",\"2018-08-24 16:45:18\",\"http://lnsect-net.com/file/tt.exe\",\"online\",\"malware_download\",\"exe,Trickbot\",\"https://urlhaus.abuse.ch/url/47325/\"\n";
        MalwareReport actualResponse = malwareFeedParser.parseCsvLine(csvLine);
        Assert.assertNotNull(actualResponse);
        Assert.assertEquals("47325", actualResponse.getId());
        Assert.assertEquals("2018-08-24 16:45:18", actualResponse.getDateAdded());
        Assert.assertEquals("http://lnsect-net.com/file/tt.exe", actualResponse.getUrl());
        Assert.assertEquals("https://urlhaus.abuse.ch/url/47325/", actualResponse.getUrlHausLink());
        Assert.assertEquals("online", actualResponse.getUrlStatus());
        Assert.assertEquals(2, actualResponse.getTags().size());
        Assert.assertEquals("lnsect-net.com", actualResponse.getBaseUrl());
    }

}
