package com.marklasater.malware.service.impl;

import com.marklasater.malware.model.IpAddressInfo;
import com.marklasater.malware.model.MalwareReport;
import com.marklasater.malware.service.FeedParser;
import com.marklasater.malware.service.HttpService;
import com.mashape.unirest.http.JsonNode;
import mockit.Expectations;
import mockit.Injectable;
import mockit.Tested;
import org.junit.Assert;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class MalwareDataServiceTest {

    @Tested
    MalwareDataServiceImpl malwareDataService;

    @Injectable
    HttpService httpService;

    @Injectable
    FeedParser malwareFeedParser;

    @Test
    public void getData(){
        List<MalwareReport> malwareReports = new ArrayList<>();
        MalwareReport malwareReport = new MalwareReport();
        malwareReport.setBaseUrl("google.com");
        malwareReports.add(malwareReport);
        new Expectations(){{
            malwareFeedParser.parseCsvFeed(anyString);
            result = malwareReports;
        }};
        List<MalwareReport> actualResult = malwareDataService.getData();
        Assert.assertNotNull(actualResult);
        Assert.assertEquals(1, actualResult.size());
    }

    @Test
    public void getIpAddressInformation(){
        new Expectations(){{
            httpService.getJson("http://ip-api.com/json/" + "google.com", new HashMap<>());
            result = new JsonNode("{\"zip\":\"94043\",\"country\":\"United States\",\"city\":\"Mountain View\",\"org\":\"Google Cloud\"" +
                    ",\"timezone\":\"America/Los_Angeles\",\"isp\":\"Google Cloud\",\"query\":\"35.198.140.181\",\"regionName\":\"California\"" +
                    ",\"lon\":-122.0574,\"as\":\"AS15169 Google LLC\",\"countryCode\":\"US\",\"region\":\"CA\",\"lat\":37.4192,\"status\":\"success\"}");
        }};
        IpAddressInfo actualResponse = malwareDataService.getIpAddressInformation("google.com");
        Assert.assertNotNull(actualResponse);
        Assert.assertEquals("94043", actualResponse.getZip());
        Assert.assertEquals("United States", actualResponse.getCountry());
        Assert.assertEquals("Mountain View", actualResponse.getCity());
        Assert.assertEquals("Google Cloud", actualResponse.getOrg());
        Assert.assertEquals("America/Los_Angeles", actualResponse.getTimezone());
        Assert.assertEquals("Google Cloud", actualResponse.getIsp());
        Assert.assertEquals("35.198.140.181", actualResponse.getQuery());
        Assert.assertEquals("California", actualResponse.getRegionName());
        Assert.assertEquals(-122.0574, actualResponse.getLon(), 0.00001);
        Assert.assertEquals("AS15169 Google LLC", actualResponse.getAs());
        Assert.assertEquals("US", actualResponse.getCountryCode());
        Assert.assertEquals("CA", actualResponse.getRegion());
        Assert.assertEquals(37.4192, actualResponse.getLat(), 0.00001);
        Assert.assertEquals("success", actualResponse.getStatus());
    }
}
