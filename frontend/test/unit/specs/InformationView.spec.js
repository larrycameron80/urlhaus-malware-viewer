import Vue from 'vue'
import InformationView from '@/components/InformationView'

Vue.config.ignoredElements = [
  'gmap-map', 'gmap-info-window', 'md-button', 'md-toolbar', 'gmap-marker'
];

describe('InformationView.spec.js', () => {
  let cmp, vm

  beforeEach(() => {
    cmp = Vue.extend(InformationView) // Create a copy of the original component
    vm = new cmp({
      propsData:{
        malwareData: []
      }
    }).$mount() // Instances and mounts the component
  })

  test('active threats null data', () => {
    expect(vm.activeThreats).toBe(0)
  })

  test('inactiveThreats threats null data', () => {
    expect(vm.inactiveThreats).toEqual(0)
  })

  test('activeThreats empty array', () => {
    expect(vm.activeThreats).toEqual(0)
  })

  test('inactiveThreats empty array', () => {
    expect(vm.inactiveThreats).toEqual(0)
  })

  test('activeThreats 1 online', () => {
    vm.malwareData = [{urlStatus: 'online'}]
    expect(vm.activeThreats).toEqual(1)
  })

  test('inactiveThreats threats 1 offline', () => {
    vm.malwareData = [{urlStatus: 'offline'}]
    expect(vm.inactiveThreats).toEqual(1)
  })

  test('activeThreats 2 online', () => {
    vm.malwareData = [{urlStatus: 'online'}, {urlStatus: 'offline'}, {urlStatus: 'online'}, {urlStatus: 'offline'}]
    expect(vm.activeThreats).toEqual(2)
  })

  test('inactiveThreats threats 2 offline', () => {
    vm.malwareData = [{urlStatus: 'offline'}, {urlStatus: 'online'}, {urlStatus: 'offline'}]
    expect(vm.inactiveThreats).toEqual(2)
  })
})
